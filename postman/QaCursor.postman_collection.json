{
  "info": {
    "name": "QaCursor Task API",
    "_postman_id": "ec1a35dd-2c7c-4f1d-9f2a-aaa000111222",
    "description": "Collection for testing Task API endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "List Tasks",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response is array\", function () {",
              "  pm.expect(pm.response.json()).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Task",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Buy milk\",\n  \"description\": \"2% organic\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is 201\", function () {",
              "  pm.response.to.have.status(201);",
              "});",
              "const json = pm.response.json();",
              "pm.test(\"Has id, title, description, completed\", function () {",
              "  pm.expect(json).to.have.property('id');",
              "  pm.expect(json).to.have.property('title');",
              "  pm.expect(json).to.have.property('description');",
              "  pm.expect(json).to.have.property('completed');",
              "});",
              "pm.environment.set('createdTaskId', json.id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Complete Task",
      "request": {
        "method": "POST",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/tasks/{{createdTaskId}}/complete",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks", "{{createdTaskId}}", "complete"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const json = pm.response.json();",
              "pm.test(\"Task is completed\", function () {",
              "  pm.expect(json.completed).to.eql(true);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Task - Validation Error (Missing Title)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"description\": \"This should fail because title is required\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/tasks",
          "host": ["{{baseUrl}}"],
          "path": ["api", "tasks"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is 400 for validation error\", function () {",
              "  pm.expect(pm.response.code).to.be.oneOf([400, 422]);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080" }
  ]
}


